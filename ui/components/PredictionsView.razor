@inject PredictionsService PService

<section id="meta">
    @if (Model != null)
    {
        <nav aria-label="breadcrumb">
            <ul>
                <li><a href="" class="@(FilterSettings == PositionFilter.QB ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.QB)" @onclick:preventDefault>QB</a></li>
                <li><a href="" class="@(FilterSettings == PositionFilter.RB ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.RB)" @onclick:preventDefault>RB</a></li>
                <li><a href="" class="@(FilterSettings == PositionFilter.WR ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.WR)" @onclick:preventDefault>WR</a></li>
                <li><a href="" class="@(FilterSettings == PositionFilter.TE ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.TE)" @onclick:preventDefault>TE</a></li>
                <li><a href="" class="@(FilterSettings == PositionFilter.DST ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.DST)" @onclick:preventDefault>DST</a></li>
                <li><a href="" class="@(FilterSettings == PositionFilter.FLEX ? "selected" : string.Empty)" @onclick="() => PositionClick(PositionFilter.FLEX)" @onclick:preventDefault>FLEX</a></li>
            </ul>
        </nav>
        <small class="chip">@Model.Updated</small>
        <figure>
            <table class="">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>player</th>
                        <th>vs</th>
                        <th><span data-tooltip="projected fantasy points" data-placement="bottom">fp</span></th>
                        <th><span data-tooltip="matchup score" data-placement="bottom">m/u</span></th>
                        <th><span class="tooltip" data-tooltip="big game probability, naive" data-placement="bottom">bgp</span></th>
                        <th><span class="tooltip" data-tooltip="game time, Central Daylight Time" data-placement="bottom">CDT</span></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (PredictionData data in Projections)
                    {
                        @if (data.GameTime >= DateTime.Now)
                        {
                            shown++;
                            <tr>
                                <td>@(num++)</td>
                                <td>
                                    @data.Name<br />
                                    @if (@FilterSettings == PositionFilter.FLEX)
                                    {
                                        <small>@data.Position &bull; </small>
                                    }
                                    <small>@data.Team</small>
                                    @if (data.Status != null && !String.IsNullOrEmpty(@data.Status.Trim()))
                                    {
                                        <small> &bull; <strong class="text-error">@data.Status</strong></small>
                                    }
                                </td>
                                <td><span class="text-tiny">@data.Vs</span></td>
                                <td>@data.FP</td>
                                <td>
                                    @if (data.Matchup > 0)
                                    {
                                        <label class="success">@data.Matchup</label>
                                    }
                                    else
                                    {
                                        <label class="error">@data.Matchup</label>
                                    }
                                </td>
                                <td><span class="text-tiny">@data.BGP</span></td>
                                <td><span class="text-tiny">@data.GameTime.ToString("ddd, HH:mm")</span></td>
                            </tr>
                        }
                        else
                        {
                            hidden++;
                        }
                    }
                </tbody>
            </table>
        </figure>
        @if (shown == 0)
        {
            <p>Crunching the data for this week's projections. Check back Wednesday.</p>
        }
        <p><small><kbd>@hidden already played</kbd></small></p>
    }
    else
    {
        <a href="#" aria-busy="true">working on it...</a>
    }
</section>

@code
{
    [Parameter]
    public int Season { get; set; }
    [Parameter]
    public int Week { get; set; }
    private PredictionModel Model = null;
    private List<PredictionData> Projections = null;
    private PositionFilter FilterSettings = PositionFilter.QB;
    private SortBy SortSettings = SortBy.FP;
    private int num = 1;
    private int hidden = 0;
    private int shown = 0;
    private int shart = 0;

    protected override async Task OnInitializedAsync()
    {
        Model = await PService.Fetch(Season, Week);
        Projections = Model.Filter(FilterSettings);

        Console.WriteLine($"got model: {Model.Season}.{Model.Week}");
    }

    private void PositionClick(PositionFilter filter)
    {
        Projections = Model.Filter(filter, SortSettings);
        FilterSettings = filter;
        num = 1;
        hidden = 0;
    }

    private void SortByClick(SortBy sort)
    {
        Projections = Model.Filter(FilterSettings, sort);
        SortSettings = sort;
        num = 1;
        hidden = 0;
    }

}

